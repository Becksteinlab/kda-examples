Loaded graph_3_1.pk -- MultiDiGraph with 3 nodes and 6 edges
KDA expression generation runtime: 0.013002634048461914

KDA vs KAPattern State Probability Expression Comparison
========================================
File: graph_3_1.pk
Graph: MultiDiGraph with 3 nodes and 6 edges
----------------------------------------
>> State 1 expressions agree: True
>> State 2 expressions agree: True
>> State 3 expressions agree: True
========================================


Loaded graph_4_1.pk -- MultiDiGraph with 4 nodes and 10 edges
KDA expression generation runtime: 0.03800845146179199

KDA vs KAPattern State Probability Expression Comparison
========================================
File: graph_4_1.pk
Graph: MultiDiGraph with 4 nodes and 10 edges
----------------------------------------
>> State 1 expressions agree: True
>> State 2 expressions agree: True
>> State 3 expressions agree: True
>> State 4 expressions agree: True
========================================


Loaded graph_5_1.pk -- MultiDiGraph with 5 nodes and 14 edges
KDA expression generation runtime: 0.2800624370574951

KDA vs KAPattern State Probability Expression Comparison
========================================
File: graph_5_1.pk
Graph: MultiDiGraph with 5 nodes and 14 edges
----------------------------------------
>> State 1 expressions agree: True
>> State 2 expressions agree: True
>> State 3 expressions agree: True
>> State 4 expressions agree: True
>> State 5 expressions agree: True
========================================


Loaded graph_6_9.pk -- MultiDiGraph with 6 nodes and 18 edges
KDA expression generation runtime: 8.88299560546875

KDA vs KAPattern State Probability Expression Comparison
========================================
File: graph_6_9.pk
Graph: MultiDiGraph with 6 nodes and 18 edges
----------------------------------------
>> State 1 expressions agree: False
>>>> Expressions do not agree! The resultant expression: 
-k25*k34*k41*k45*k54*k63 + k25*k34*k41*k54*k63
>>>> KDA Expression: 
k21*k31*k41*k52*k63 + k21*k31*k41*k52*k65 + k21*k31*k41*k54*k63 + k21*k31*k41*k54*k65 + k21*k31*k41*k56*k63 + k21*k31*k42*k52*k63 + k21*k31*k42*k52*k65 + k21*k31*k42*k54*k63 + k21*k31*k42*k54*k65 + k21*k31*k42*k56*k63 + k21*k31*k43*k52*k63 + k21*k31*k43*k52*k65 + k21*k31*k43*k54*k63 + k21*k31*k43*k54*k65 + k21*k31*k43*k56*k63 + k21*k31*k45*k52*k63 + k21*k31*k45*k52*k65 + k21*k31*k45*k56*k63 + k21*k34*k41*k52*k63 + k21*k34*k41*k52*k65 + k21*k34*k41*k54*k63 + k21*k34*k41*k54*k65 + k21*k34*k41*k56*k63 + k21*k34*k42*k52*k63 + k21*k34*k42*k52*k65 + k21*k34*k42*k54*k63 + k21*k34*k42*k54*k65 + k21*k34*k42*k56*k63 + k21*k34*k45*k52*k63 + k21*k34*k45*k52*k65 + k21*k36*k41*k52*k65 + k21*k36*k41*k54*k65 + k21*k36*k42*k52*k65 + k21*k36*k42*k54*k65 + k21*k36*k43*k52*k65 + k21*k36*k45*k52*k65 + k24*k31*k41*k52*k63 + k24*k31*k41*k52*k65 + k24*k31*k41*k54*k63 + k24*k31*k41*k54*k65 + k24*k31*k41*k56*k63 + k24*k31*k43*k52*k63 + k24*k31*k43*k52*k65 + k24*k31*k43*k54*k63 + k24*k31*k43*k54*k65 + k24*k31*k43*k56*k63 + k24*k31*k45*k56*k63 + k24*k34*k41*k52*k63 + k24*k34*k41*k52*k65 + k24*k34*k41*k54*k63 + k24*k34*k41*k54*k65 + k24*k34*k41*k56*k63 + k24*k36*k41*k52*k65 + k24*k36*k41*k54*k65 + k25*k31*k41*k54*k63 + k25*k31*k41*k54*k65 + k25*k31*k41*k56*k63 + k25*k31*k42*k56*k63 + k25*k31*k43*k54*k63 + k25*k31*k43*k54*k65 + k25*k31*k43*k56*k63 + k25*k31*k45*k56*k63 + k25*k34*k41*k54*k63 + k25*k34*k41*k54*k65 + k25*k34*k41*k56*k63 + k25*k36*k41*k54*k65
>>>> KAPattern Expression: 
k21*k31*k41*k52*k63 + k21*k31*k41*k52*k65 + k21*k31*k41*k54*k63 + k21*k31*k41*k54*k65 + k21*k31*k41*k56*k63 + k21*k31*k42*k52*k63 + k21*k31*k42*k52*k65 + k21*k31*k42*k54*k63 + k21*k31*k42*k54*k65 + k21*k31*k42*k56*k63 + k21*k31*k43*k52*k63 + k21*k31*k43*k52*k65 + k21*k31*k43*k54*k63 + k21*k31*k43*k54*k65 + k21*k31*k43*k56*k63 + k21*k31*k45*k52*k63 + k21*k31*k45*k52*k65 + k21*k31*k45*k56*k63 + k21*k34*k41*k52*k63 + k21*k34*k41*k52*k65 + k21*k34*k41*k54*k63 + k21*k34*k41*k54*k65 + k21*k34*k41*k56*k63 + k21*k34*k42*k52*k63 + k21*k34*k42*k52*k65 + k21*k34*k42*k54*k63 + k21*k34*k42*k54*k65 + k21*k34*k42*k56*k63 + k21*k34*k45*k52*k63 + k21*k34*k45*k52*k65 + k21*k36*k41*k52*k65 + k21*k36*k41*k54*k65 + k21*k36*k42*k52*k65 + k21*k36*k42*k54*k65 + k21*k36*k43*k52*k65 + k21*k36*k45*k52*k65 + k24*k31*k41*k52*k63 + k24*k31*k41*k52*k65 + k24*k31*k41*k54*k63 + k24*k31*k41*k54*k65 + k24*k31*k41*k56*k63 + k24*k31*k43*k52*k63 + k24*k31*k43*k52*k65 + k24*k31*k43*k54*k63 + k24*k31*k43*k54*k65 + k24*k31*k43*k56*k63 + k24*k31*k45*k56*k63 + k24*k34*k41*k52*k63 + k24*k34*k41*k52*k65 + k24*k34*k41*k54*k63 + k24*k34*k41*k54*k65 + k24*k34*k41*k56*k63 + k24*k36*k41*k52*k65 + k24*k36*k41*k54*k65 + k25*k31*k41*k54*k63 + k25*k31*k41*k54*k65 + k25*k31*k41*k56*k63 + k25*k31*k42*k56*k63 + k25*k31*k43*k54*k63 + k25*k31*k43*k54*k65 + k25*k31*k43*k56*k63 + k25*k31*k45*k56*k63 + k25*k34*k41*k45*k54*k63 + k25*k34*k41*k54*k65 + k25*k34*k41*k56*k63 + k25*k36*k41*k54*k65
>> State 2 expressions agree: True
>> State 3 expressions agree: True
>> State 4 expressions agree: True
>> State 5 expressions agree: True
>> State 6 expressions agree: False
>>>> Expressions do not agree! The resultant expression: 
-k13*k24*k34*k36*k43*k52 + k13*k24*k36*k43*k52 - k14*k25*k34*k45*k54*k56 + k14*k25*k34*k45*k56
>>>> KDA Expression: 
k12*k24*k31*k45*k56 + k12*k24*k34*k45*k56 + k12*k24*k36*k43*k52 + k12*k24*k36*k43*k54 + k12*k24*k36*k43*k56 + k12*k24*k36*k45*k56 + k12*k25*k31*k41*k56 + k12*k25*k31*k42*k56 + k12*k25*k31*k43*k56 + k12*k25*k31*k45*k56 + k12*k25*k34*k41*k56 + k12*k25*k34*k42*k56 + k12*k25*k34*k45*k56 + k12*k25*k36*k41*k56 + k12*k25*k36*k42*k56 + k12*k25*k36*k43*k54 + k12*k25*k36*k43*k56 + k12*k25*k36*k45*k56 + k13*k21*k34*k45*k56 + k13*k21*k36*k41*k52 + k13*k21*k36*k41*k54 + k13*k21*k36*k41*k56 + k13*k21*k36*k42*k52 + k13*k21*k36*k42*k54 + k13*k21*k36*k42*k56 + k13*k21*k36*k43*k52 + k13*k21*k36*k43*k54 + k13*k21*k36*k43*k56 + k13*k21*k36*k45*k52 + k13*k21*k36*k45*k56 + k13*k24*k34*k45*k56 + k13*k24*k36*k41*k52 + k13*k24*k36*k41*k54 + k13*k24*k36*k41*k56 + k13*k24*k36*k43*k52 + k13*k24*k36*k43*k54 + k13*k24*k36*k43*k56 + k13*k24*k36*k45*k56 + k13*k25*k34*k42*k56 + k13*k25*k34*k45*k56 + k13*k25*k36*k41*k54 + k13*k25*k36*k41*k56 + k13*k25*k36*k42*k56 + k13*k25*k36*k43*k54 + k13*k25*k36*k43*k56 + k13*k25*k36*k45*k56 + k14*k21*k31*k45*k56 + k14*k21*k34*k45*k56 + k14*k21*k36*k43*k52 + k14*k21*k36*k43*k54 + k14*k21*k36*k43*k56 + k14*k21*k36*k45*k56 + k14*k24*k31*k45*k56 + k14*k24*k34*k45*k56 + k14*k24*k36*k43*k52 + k14*k24*k36*k43*k54 + k14*k24*k36*k43*k56 + k14*k24*k36*k45*k56 + k14*k25*k31*k42*k56 + k14*k25*k31*k45*k56 + k14*k25*k34*k42*k56 + k14*k25*k34*k45*k56 + k14*k25*k36*k42*k56 + k14*k25*k36*k43*k54 + k14*k25*k36*k43*k56 + k14*k25*k36*k45*k56
>>>> KAPattern Expression: 
k12*k24*k31*k45*k56 + k12*k24*k34*k45*k56 + k12*k24*k36*k43*k52 + k12*k24*k36*k43*k54 + k12*k24*k36*k43*k56 + k12*k24*k36*k45*k56 + k12*k25*k31*k41*k56 + k12*k25*k31*k42*k56 + k12*k25*k31*k43*k56 + k12*k25*k31*k45*k56 + k12*k25*k34*k41*k56 + k12*k25*k34*k42*k56 + k12*k25*k34*k45*k56 + k12*k25*k36*k41*k56 + k12*k25*k36*k42*k56 + k12*k25*k36*k43*k54 + k12*k25*k36*k43*k56 + k12*k25*k36*k45*k56 + k13*k21*k34*k45*k56 + k13*k21*k36*k41*k52 + k13*k21*k36*k41*k54 + k13*k21*k36*k41*k56 + k13*k21*k36*k42*k52 + k13*k21*k36*k42*k54 + k13*k21*k36*k42*k56 + k13*k21*k36*k43*k52 + k13*k21*k36*k43*k54 + k13*k21*k36*k43*k56 + k13*k21*k36*k45*k52 + k13*k21*k36*k45*k56 + k13*k24*k34*k36*k43*k52 + k13*k24*k34*k45*k56 + k13*k24*k36*k41*k52 + k13*k24*k36*k41*k54 + k13*k24*k36*k41*k56 + k13*k24*k36*k43*k54 + k13*k24*k36*k43*k56 + k13*k24*k36*k45*k56 + k13*k25*k34*k42*k56 + k13*k25*k34*k45*k56 + k13*k25*k36*k41*k54 + k13*k25*k36*k41*k56 + k13*k25*k36*k42*k56 + k13*k25*k36*k43*k54 + k13*k25*k36*k43*k56 + k13*k25*k36*k45*k56 + k14*k21*k31*k45*k56 + k14*k21*k34*k45*k56 + k14*k21*k36*k43*k52 + k14*k21*k36*k43*k54 + k14*k21*k36*k43*k56 + k14*k21*k36*k45*k56 + k14*k24*k31*k45*k56 + k14*k24*k34*k45*k56 + k14*k24*k36*k43*k52 + k14*k24*k36*k43*k54 + k14*k24*k36*k43*k56 + k14*k24*k36*k45*k56 + k14*k25*k31*k42*k56 + k14*k25*k31*k45*k56 + k14*k25*k34*k42*k56 + k14*k25*k34*k45*k54*k56 + k14*k25*k36*k42*k56 + k14*k25*k36*k43*k54 + k14*k25*k36*k43*k56 + k14*k25*k36*k45*k56
========================================


Loaded graph_7_17.pk -- MultiDiGraph with 7 nodes and 20 edges
KDA expression generation runtime: 22.344996452331543

KDA vs KAPattern State Probability Expression Comparison
========================================
File: graph_7_17.pk
Graph: MultiDiGraph with 7 nodes and 20 edges
----------------------------------------
>> State 1 expressions agree: False
>>>> Expressions do not agree! The resultant expression: 
-k25*k34*k41*k45*k54*k65*k73 - k25*k34*k41*k45*k54*k67*k73 + k25*k34*k41*k54*k65*k73 + k25*k34*k41*k54*k67*k73
>>>> KDA Expression: 
k21*k31*k41*k52*k65*k73 + k21*k31*k41*k52*k65*k76 + k21*k31*k41*k52*k67*k73 + k21*k31*k41*k54*k65*k73 + k21*k31*k41*k54*k65*k76 + k21*k31*k41*k54*k67*k73 + k21*k31*k41*k56*k67*k73 + k21*k31*k42*k52*k65*k73 + k21*k31*k42*k52*k65*k76 + k21*k31*k42*k52*k67*k73 + k21*k31*k42*k54*k65*k73 + k21*k31*k42*k54*k65*k76 + k21*k31*k42*k54*k67*k73 + k21*k31*k42*k56*k67*k73 + k21*k31*k43*k52*k65*k73 + k21*k31*k43*k52*k65*k76 + k21*k31*k43*k52*k67*k73 + k21*k31*k43*k54*k65*k73 + k21*k31*k43*k54*k65*k76 + k21*k31*k43*k54*k67*k73 + k21*k31*k43*k56*k67*k73 + k21*k31*k45*k52*k65*k73 + k21*k31*k45*k52*k65*k76 + k21*k31*k45*k52*k67*k73 + k21*k31*k45*k56*k67*k73 + k21*k34*k41*k52*k65*k73 + k21*k34*k41*k52*k65*k76 + k21*k34*k41*k52*k67*k73 + k21*k34*k41*k54*k65*k73 + k21*k34*k41*k54*k65*k76 + k21*k34*k41*k54*k67*k73 + k21*k34*k41*k56*k67*k73 + k21*k34*k42*k52*k65*k73 + k21*k34*k42*k52*k65*k76 + k21*k34*k42*k52*k67*k73 + k21*k34*k42*k54*k65*k73 + k21*k34*k42*k54*k65*k76 + k21*k34*k42*k54*k67*k73 + k21*k34*k42*k56*k67*k73 + k21*k34*k45*k52*k65*k73 + k21*k34*k45*k52*k65*k76 + k21*k34*k45*k52*k67*k73 + k21*k37*k41*k52*k65*k76 + k21*k37*k41*k54*k65*k76 + k21*k37*k42*k52*k65*k76 + k21*k37*k42*k54*k65*k76 + k21*k37*k43*k52*k65*k76 + k21*k37*k45*k52*k65*k76 + k24*k31*k41*k52*k65*k73 + k24*k31*k41*k52*k65*k76 + k24*k31*k41*k52*k67*k73 + k24*k31*k41*k54*k65*k73 + k24*k31*k41*k54*k65*k76 + k24*k31*k41*k54*k67*k73 + k24*k31*k41*k56*k67*k73 + k24*k31*k43*k52*k65*k73 + k24*k31*k43*k52*k65*k76 + k24*k31*k43*k52*k67*k73 + k24*k31*k43*k54*k65*k73 + k24*k31*k43*k54*k65*k76 + k24*k31*k43*k54*k67*k73 + k24*k31*k43*k56*k67*k73 + k24*k31*k45*k56*k67*k73 + k24*k34*k41*k52*k65*k73 + k24*k34*k41*k52*k65*k76 + k24*k34*k41*k52*k67*k73 + k24*k34*k41*k54*k65*k73 + k24*k34*k41*k54*k65*k76 + k24*k34*k41*k54*k67*k73 + k24*k34*k41*k56*k67*k73 + k24*k37*k41*k52*k65*k76 + k24*k37*k41*k54*k65*k76 + k25*k31*k41*k54*k65*k73 + k25*k31*k41*k54*k65*k76 + k25*k31*k41*k54*k67*k73 + k25*k31*k41*k56*k67*k73 + k25*k31*k42*k56*k67*k73 + k25*k31*k43*k54*k65*k73 + k25*k31*k43*k54*k65*k76 + k25*k31*k43*k54*k67*k73 + k25*k31*k43*k56*k67*k73 + k25*k31*k45*k56*k67*k73 + k25*k34*k41*k54*k65*k73 + k25*k34*k41*k54*k65*k76 + k25*k34*k41*k54*k67*k73 + k25*k34*k41*k56*k67*k73 + k25*k37*k41*k54*k65*k76
>>>> KAPattern Expression: 
k21*k31*k41*k52*k65*k73 + k21*k31*k41*k52*k65*k76 + k21*k31*k41*k52*k67*k73 + k21*k31*k41*k54*k65*k73 + k21*k31*k41*k54*k65*k76 + k21*k31*k41*k54*k67*k73 + k21*k31*k41*k56*k67*k73 + k21*k31*k42*k52*k65*k73 + k21*k31*k42*k52*k65*k76 + k21*k31*k42*k52*k67*k73 + k21*k31*k42*k54*k65*k73 + k21*k31*k42*k54*k65*k76 + k21*k31*k42*k54*k67*k73 + k21*k31*k42*k56*k67*k73 + k21*k31*k43*k52*k65*k73 + k21*k31*k43*k52*k65*k76 + k21*k31*k43*k52*k67*k73 + k21*k31*k43*k54*k65*k73 + k21*k31*k43*k54*k65*k76 + k21*k31*k43*k54*k67*k73 + k21*k31*k43*k56*k67*k73 + k21*k31*k45*k52*k65*k73 + k21*k31*k45*k52*k65*k76 + k21*k31*k45*k52*k67*k73 + k21*k31*k45*k56*k67*k73 + k21*k34*k41*k52*k65*k73 + k21*k34*k41*k52*k65*k76 + k21*k34*k41*k52*k67*k73 + k21*k34*k41*k54*k65*k73 + k21*k34*k41*k54*k65*k76 + k21*k34*k41*k54*k67*k73 + k21*k34*k41*k56*k67*k73 + k21*k34*k42*k52*k65*k73 + k21*k34*k42*k52*k65*k76 + k21*k34*k42*k52*k67*k73 + k21*k34*k42*k54*k65*k73 + k21*k34*k42*k54*k65*k76 + k21*k34*k42*k54*k67*k73 + k21*k34*k42*k56*k67*k73 + k21*k34*k45*k52*k65*k73 + k21*k34*k45*k52*k65*k76 + k21*k34*k45*k52*k67*k73 + k21*k37*k41*k52*k65*k76 + k21*k37*k41*k54*k65*k76 + k21*k37*k42*k52*k65*k76 + k21*k37*k42*k54*k65*k76 + k21*k37*k43*k52*k65*k76 + k21*k37*k45*k52*k65*k76 + k24*k31*k41*k52*k65*k73 + k24*k31*k41*k52*k65*k76 + k24*k31*k41*k52*k67*k73 + k24*k31*k41*k54*k65*k73 + k24*k31*k41*k54*k65*k76 + k24*k31*k41*k54*k67*k73 + k24*k31*k41*k56*k67*k73 + k24*k31*k43*k52*k65*k73 + k24*k31*k43*k52*k65*k76 + k24*k31*k43*k52*k67*k73 + k24*k31*k43*k54*k65*k73 + k24*k31*k43*k54*k65*k76 + k24*k31*k43*k54*k67*k73 + k24*k31*k43*k56*k67*k73 + k24*k31*k45*k56*k67*k73 + k24*k34*k41*k52*k65*k73 + k24*k34*k41*k52*k65*k76 + k24*k34*k41*k52*k67*k73 + k24*k34*k41*k54*k65*k73 + k24*k34*k41*k54*k65*k76 + k24*k34*k41*k54*k67*k73 + k24*k34*k41*k56*k67*k73 + k24*k37*k41*k52*k65*k76 + k24*k37*k41*k54*k65*k76 + k25*k31*k41*k54*k65*k73 + k25*k31*k41*k54*k65*k76 + k25*k31*k41*k54*k67*k73 + k25*k31*k41*k56*k67*k73 + k25*k31*k42*k56*k67*k73 + k25*k31*k43*k54*k65*k73 + k25*k31*k43*k54*k65*k76 + k25*k31*k43*k54*k67*k73 + k25*k31*k43*k56*k67*k73 + k25*k31*k45*k56*k67*k73 + k25*k34*k41*k45*k54*k65*k73 + k25*k34*k41*k45*k54*k67*k73 + k25*k34*k41*k54*k65*k76 + k25*k34*k41*k56*k67*k73 + k25*k37*k41*k54*k65*k76
>> State 2 expressions agree: True
>> State 3 expressions agree: True
>> State 4 expressions agree: True
>> State 5 expressions agree: True
>> State 6 expressions agree: False
>>>> Expressions do not agree! The resultant expression: 
-k12*k25*k34*k45*k54*k56*k73 + k12*k25*k34*k45*k56*k73 - k13*k24*k34*k37*k43*k52*k76 + k13*k24*k37*k43*k52*k76 - k13*k25*k34*k45*k54*k56*k73 + k13*k25*k34*k45*k56*k73 - k14*k25*k31*k45*k54*k56*k73 + k14*k25*k31*k45*k56*k73 - k14*k25*k34*k45*k54*k56*k73 - k14*k25*k34*k45*k54*k56*k76 + k14*k25*k34*k45*k56*k73 + k14*k25*k34*k45*k56*k76 - k14*k25*k37*k45*k54*k56*k76 + k14*k25*k37*k45*k56*k76
>>>> KDA Expression: 
k12*k24*k31*k45*k56*k73 + k12*k24*k31*k45*k56*k76 + k12*k24*k34*k45*k56*k73 + k12*k24*k34*k45*k56*k76 + k12*k24*k37*k43*k52*k76 + k12*k24*k37*k43*k54*k76 + k12*k24*k37*k43*k56*k76 + k12*k24*k37*k45*k56*k76 + k12*k25*k31*k41*k56*k73 + k12*k25*k31*k41*k56*k76 + k12*k25*k31*k42*k56*k73 + k12*k25*k31*k42*k56*k76 + k12*k25*k31*k43*k56*k73 + k12*k25*k31*k43*k56*k76 + k12*k25*k31*k45*k56*k73 + k12*k25*k31*k45*k56*k76 + k12*k25*k34*k41*k56*k73 + k12*k25*k34*k41*k56*k76 + k12*k25*k34*k42*k56*k73 + k12*k25*k34*k42*k56*k76 + k12*k25*k34*k45*k56*k73 + k12*k25*k34*k45*k56*k76 + k12*k25*k37*k41*k56*k76 + k12*k25*k37*k42*k56*k76 + k12*k25*k37*k43*k54*k76 + k12*k25*k37*k43*k56*k76 + k12*k25*k37*k45*k56*k76 + k13*k21*k34*k45*k56*k73 + k13*k21*k34*k45*k56*k76 + k13*k21*k37*k41*k52*k76 + k13*k21*k37*k41*k54*k76 + k13*k21*k37*k41*k56*k76 + k13*k21*k37*k42*k52*k76 + k13*k21*k37*k42*k54*k76 + k13*k21*k37*k42*k56*k76 + k13*k21*k37*k43*k52*k76 + k13*k21*k37*k43*k54*k76 + k13*k21*k37*k43*k56*k76 + k13*k21*k37*k45*k52*k76 + k13*k21*k37*k45*k56*k76 + k13*k24*k34*k45*k56*k73 + k13*k24*k34*k45*k56*k76 + k13*k24*k37*k41*k52*k76 + k13*k24*k37*k41*k54*k76 + k13*k24*k37*k41*k56*k76 + k13*k24*k37*k43*k52*k76 + k13*k24*k37*k43*k54*k76 + k13*k24*k37*k43*k56*k76 + k13*k24*k37*k45*k56*k76 + k13*k25*k34*k42*k56*k73 + k13*k25*k34*k42*k56*k76 + k13*k25*k34*k45*k56*k73 + k13*k25*k34*k45*k56*k76 + k13*k25*k37*k41*k54*k76 + k13*k25*k37*k41*k56*k76 + k13*k25*k37*k42*k56*k76 + k13*k25*k37*k43*k54*k76 + k13*k25*k37*k43*k56*k76 + k13*k25*k37*k45*k56*k76 + k14*k21*k31*k45*k56*k73 + k14*k21*k31*k45*k56*k76 + k14*k21*k34*k45*k56*k73 + k14*k21*k34*k45*k56*k76 + k14*k21*k37*k43*k52*k76 + k14*k21*k37*k43*k54*k76 + k14*k21*k37*k43*k56*k76 + k14*k21*k37*k45*k56*k76 + k14*k24*k31*k45*k56*k73 + k14*k24*k31*k45*k56*k76 + k14*k24*k34*k45*k56*k73 + k14*k24*k34*k45*k56*k76 + k14*k24*k37*k43*k52*k76 + k14*k24*k37*k43*k54*k76 + k14*k24*k37*k43*k56*k76 + k14*k24*k37*k45*k56*k76 + k14*k25*k31*k42*k56*k73 + k14*k25*k31*k42*k56*k76 + k14*k25*k31*k45*k56*k73 + k14*k25*k31*k45*k56*k76 + k14*k25*k34*k42*k56*k73 + k14*k25*k34*k42*k56*k76 + k14*k25*k34*k45*k56*k73 + k14*k25*k34*k45*k56*k76 + k14*k25*k37*k42*k56*k76 + k14*k25*k37*k43*k54*k76 + k14*k25*k37*k43*k56*k76 + k14*k25*k37*k45*k56*k76
>>>> KAPattern Expression: 
k12*k24*k31*k45*k56*k73 + k12*k24*k31*k45*k56*k76 + k12*k24*k34*k45*k56*k73 + k12*k24*k34*k45*k56*k76 + k12*k24*k37*k43*k52*k76 + k12*k24*k37*k43*k54*k76 + k12*k24*k37*k43*k56*k76 + k12*k24*k37*k45*k56*k76 + k12*k25*k31*k41*k56*k73 + k12*k25*k31*k41*k56*k76 + k12*k25*k31*k42*k56*k73 + k12*k25*k31*k42*k56*k76 + k12*k25*k31*k43*k56*k73 + k12*k25*k31*k43*k56*k76 + k12*k25*k31*k45*k56*k73 + k12*k25*k31*k45*k56*k76 + k12*k25*k34*k41*k56*k73 + k12*k25*k34*k41*k56*k76 + k12*k25*k34*k42*k56*k73 + k12*k25*k34*k42*k56*k76 + k12*k25*k34*k45*k54*k56*k73 + k12*k25*k34*k45*k56*k76 + k12*k25*k37*k41*k56*k76 + k12*k25*k37*k42*k56*k76 + k12*k25*k37*k43*k54*k76 + k12*k25*k37*k43*k56*k76 + k12*k25*k37*k45*k56*k76 + k13*k21*k34*k45*k56*k73 + k13*k21*k34*k45*k56*k76 + k13*k21*k37*k41*k52*k76 + k13*k21*k37*k41*k54*k76 + k13*k21*k37*k41*k56*k76 + k13*k21*k37*k42*k52*k76 + k13*k21*k37*k42*k54*k76 + k13*k21*k37*k42*k56*k76 + k13*k21*k37*k43*k52*k76 + k13*k21*k37*k43*k54*k76 + k13*k21*k37*k43*k56*k76 + k13*k21*k37*k45*k52*k76 + k13*k21*k37*k45*k56*k76 + k13*k24*k34*k37*k43*k52*k76 + k13*k24*k34*k45*k56*k73 + k13*k24*k34*k45*k56*k76 + k13*k24*k37*k41*k52*k76 + k13*k24*k37*k41*k54*k76 + k13*k24*k37*k41*k56*k76 + k13*k24*k37*k43*k54*k76 + k13*k24*k37*k43*k56*k76 + k13*k24*k37*k45*k56*k76 + k13*k25*k34*k42*k56*k73 + k13*k25*k34*k42*k56*k76 + k13*k25*k34*k45*k54*k56*k73 + k13*k25*k34*k45*k56*k76 + k13*k25*k37*k41*k54*k76 + k13*k25*k37*k41*k56*k76 + k13*k25*k37*k42*k56*k76 + k13*k25*k37*k43*k54*k76 + k13*k25*k37*k43*k56*k76 + k13*k25*k37*k45*k56*k76 + k14*k21*k31*k45*k56*k73 + k14*k21*k31*k45*k56*k76 + k14*k21*k34*k45*k56*k73 + k14*k21*k34*k45*k56*k76 + k14*k21*k37*k43*k52*k76 + k14*k21*k37*k43*k54*k76 + k14*k21*k37*k43*k56*k76 + k14*k21*k37*k45*k56*k76 + k14*k24*k31*k45*k56*k73 + k14*k24*k31*k45*k56*k76 + k14*k24*k34*k45*k56*k73 + k14*k24*k34*k45*k56*k76 + k14*k24*k37*k43*k52*k76 + k14*k24*k37*k43*k54*k76 + k14*k24*k37*k43*k56*k76 + k14*k24*k37*k45*k56*k76 + k14*k25*k31*k42*k56*k73 + k14*k25*k31*k42*k56*k76 + k14*k25*k31*k45*k54*k56*k73 + k14*k25*k31*k45*k56*k76 + k14*k25*k34*k42*k56*k73 + k14*k25*k34*k42*k56*k76 + k14*k25*k34*k45*k54*k56*k73 + k14*k25*k34*k45*k54*k56*k76 + k14*k25*k37*k42*k56*k76 + k14*k25*k37*k43*k54*k76 + k14*k25*k37*k43*k56*k76 + k14*k25*k37*k45*k54*k56*k76
>> State 7 expressions agree: False
>>>> Expressions do not agree! The resultant expression: 
-k13*k24*k34*k37*k43*k52*k65 - k13*k24*k34*k37*k43*k52*k67 + k13*k24*k37*k43*k52*k65 + k13*k24*k37*k43*k52*k67 - k14*k25*k34*k45*k54*k56*k67 + k14*k25*k34*k45*k56*k67
>>>> KDA Expression: 
k12*k24*k31*k45*k56*k67 + k12*k24*k34*k45*k56*k67 + k12*k24*k37*k43*k52*k65 + k12*k24*k37*k43*k52*k67 + k12*k24*k37*k43*k54*k65 + k12*k24*k37*k43*k54*k67 + k12*k24*k37*k43*k56*k67 + k12*k24*k37*k45*k56*k67 + k12*k25*k31*k41*k56*k67 + k12*k25*k31*k42*k56*k67 + k12*k25*k31*k43*k56*k67 + k12*k25*k31*k45*k56*k67 + k12*k25*k34*k41*k56*k67 + k12*k25*k34*k42*k56*k67 + k12*k25*k34*k45*k56*k67 + k12*k25*k37*k41*k56*k67 + k12*k25*k37*k42*k56*k67 + k12*k25*k37*k43*k54*k65 + k12*k25*k37*k43*k54*k67 + k12*k25*k37*k43*k56*k67 + k12*k25*k37*k45*k56*k67 + k13*k21*k34*k45*k56*k67 + k13*k21*k37*k41*k52*k65 + k13*k21*k37*k41*k52*k67 + k13*k21*k37*k41*k54*k65 + k13*k21*k37*k41*k54*k67 + k13*k21*k37*k41*k56*k67 + k13*k21*k37*k42*k52*k65 + k13*k21*k37*k42*k52*k67 + k13*k21*k37*k42*k54*k65 + k13*k21*k37*k42*k54*k67 + k13*k21*k37*k42*k56*k67 + k13*k21*k37*k43*k52*k65 + k13*k21*k37*k43*k52*k67 + k13*k21*k37*k43*k54*k65 + k13*k21*k37*k43*k54*k67 + k13*k21*k37*k43*k56*k67 + k13*k21*k37*k45*k52*k65 + k13*k21*k37*k45*k52*k67 + k13*k21*k37*k45*k56*k67 + k13*k24*k34*k45*k56*k67 + k13*k24*k37*k41*k52*k65 + k13*k24*k37*k41*k52*k67 + k13*k24*k37*k41*k54*k65 + k13*k24*k37*k41*k54*k67 + k13*k24*k37*k41*k56*k67 + k13*k24*k37*k43*k52*k65 + k13*k24*k37*k43*k52*k67 + k13*k24*k37*k43*k54*k65 + k13*k24*k37*k43*k54*k67 + k13*k24*k37*k43*k56*k67 + k13*k24*k37*k45*k56*k67 + k13*k25*k34*k42*k56*k67 + k13*k25*k34*k45*k56*k67 + k13*k25*k37*k41*k54*k65 + k13*k25*k37*k41*k54*k67 + k13*k25*k37*k41*k56*k67 + k13*k25*k37*k42*k56*k67 + k13*k25*k37*k43*k54*k65 + k13*k25*k37*k43*k54*k67 + k13*k25*k37*k43*k56*k67 + k13*k25*k37*k45*k56*k67 + k14*k21*k31*k45*k56*k67 + k14*k21*k34*k45*k56*k67 + k14*k21*k37*k43*k52*k65 + k14*k21*k37*k43*k52*k67 + k14*k21*k37*k43*k54*k65 + k14*k21*k37*k43*k54*k67 + k14*k21*k37*k43*k56*k67 + k14*k21*k37*k45*k56*k67 + k14*k24*k31*k45*k56*k67 + k14*k24*k34*k45*k56*k67 + k14*k24*k37*k43*k52*k65 + k14*k24*k37*k43*k52*k67 + k14*k24*k37*k43*k54*k65 + k14*k24*k37*k43*k54*k67 + k14*k24*k37*k43*k56*k67 + k14*k24*k37*k45*k56*k67 + k14*k25*k31*k42*k56*k67 + k14*k25*k31*k45*k56*k67 + k14*k25*k34*k42*k56*k67 + k14*k25*k34*k45*k56*k67 + k14*k25*k37*k42*k56*k67 + k14*k25*k37*k43*k54*k65 + k14*k25*k37*k43*k54*k67 + k14*k25*k37*k43*k56*k67 + k14*k25*k37*k45*k56*k67
>>>> KAPattern Expression: 
k12*k24*k31*k45*k56*k67 + k12*k24*k34*k45*k56*k67 + k12*k24*k37*k43*k52*k65 + k12*k24*k37*k43*k52*k67 + k12*k24*k37*k43*k54*k65 + k12*k24*k37*k43*k54*k67 + k12*k24*k37*k43*k56*k67 + k12*k24*k37*k45*k56*k67 + k12*k25*k31*k41*k56*k67 + k12*k25*k31*k42*k56*k67 + k12*k25*k31*k43*k56*k67 + k12*k25*k31*k45*k56*k67 + k12*k25*k34*k41*k56*k67 + k12*k25*k34*k42*k56*k67 + k12*k25*k34*k45*k56*k67 + k12*k25*k37*k41*k56*k67 + k12*k25*k37*k42*k56*k67 + k12*k25*k37*k43*k54*k65 + k12*k25*k37*k43*k54*k67 + k12*k25*k37*k43*k56*k67 + k12*k25*k37*k45*k56*k67 + k13*k21*k34*k45*k56*k67 + k13*k21*k37*k41*k52*k65 + k13*k21*k37*k41*k52*k67 + k13*k21*k37*k41*k54*k65 + k13*k21*k37*k41*k54*k67 + k13*k21*k37*k41*k56*k67 + k13*k21*k37*k42*k52*k65 + k13*k21*k37*k42*k52*k67 + k13*k21*k37*k42*k54*k65 + k13*k21*k37*k42*k54*k67 + k13*k21*k37*k42*k56*k67 + k13*k21*k37*k43*k52*k65 + k13*k21*k37*k43*k52*k67 + k13*k21*k37*k43*k54*k65 + k13*k21*k37*k43*k54*k67 + k13*k21*k37*k43*k56*k67 + k13*k21*k37*k45*k52*k65 + k13*k21*k37*k45*k52*k67 + k13*k21*k37*k45*k56*k67 + k13*k24*k34*k37*k43*k52*k65 + k13*k24*k34*k37*k43*k52*k67 + k13*k24*k34*k45*k56*k67 + k13*k24*k37*k41*k52*k65 + k13*k24*k37*k41*k52*k67 + k13*k24*k37*k41*k54*k65 + k13*k24*k37*k41*k54*k67 + k13*k24*k37*k41*k56*k67 + k13*k24*k37*k43*k54*k65 + k13*k24*k37*k43*k54*k67 + k13*k24*k37*k43*k56*k67 + k13*k24*k37*k45*k56*k67 + k13*k25*k34*k42*k56*k67 + k13*k25*k34*k45*k56*k67 + k13*k25*k37*k41*k54*k65 + k13*k25*k37*k41*k54*k67 + k13*k25*k37*k41*k56*k67 + k13*k25*k37*k42*k56*k67 + k13*k25*k37*k43*k54*k65 + k13*k25*k37*k43*k54*k67 + k13*k25*k37*k43*k56*k67 + k13*k25*k37*k45*k56*k67 + k14*k21*k31*k45*k56*k67 + k14*k21*k34*k45*k56*k67 + k14*k21*k37*k43*k52*k65 + k14*k21*k37*k43*k52*k67 + k14*k21*k37*k43*k54*k65 + k14*k21*k37*k43*k54*k67 + k14*k21*k37*k43*k56*k67 + k14*k21*k37*k45*k56*k67 + k14*k24*k31*k45*k56*k67 + k14*k24*k34*k45*k56*k67 + k14*k24*k37*k43*k52*k65 + k14*k24*k37*k43*k52*k67 + k14*k24*k37*k43*k54*k65 + k14*k24*k37*k43*k54*k67 + k14*k24*k37*k43*k56*k67 + k14*k24*k37*k45*k56*k67 + k14*k25*k31*k42*k56*k67 + k14*k25*k31*k45*k56*k67 + k14*k25*k34*k42*k56*k67 + k14*k25*k34*k45*k54*k56*k67 + k14*k25*k37*k42*k56*k67 + k14*k25*k37*k43*k54*k65 + k14*k25*k37*k43*k54*k67 + k14*k25*k37*k43*k56*k67 + k14*k25*k37*k45*k56*k67
========================================


