function [E F D] = Expression(K)
% User Supplies the input parameter K
k12 = K(1)
k13 = K(2)
k14 = K(3)
k21 = K(4)
k24 = K(5)
k25 = K(6)
k31 = K(7)
k34 = K(8)
k36 = K(9)
k41 = K(10)
k42 = K(11)
k43 = K(12)
k45 = K(13)
k52 = K(14)
k54 = K(15)
k56 = K(16)
k63 = K(17)
k65 = K(18)

%% numerator 
 E(1) = k21*k31*k41*k52*k63 + k21*k31*k41*k52*k65 + k21*k31*k41*k63*k54 + k21*k31*k41*k63*k56 + k21*k31*k41*k54*k65 + k21*k31*k42*k52*k63 + k21*k31*k42*k52*k65 + k21*k31*k42*k63*k54 + k21*k31*k42*k63*k56 + k21*k31*k42*k54*k65 + k21*k31*k52*k43*k63 + k21*k31*k52*k43*k65 + k21*k31*k52*k63*k45 + k21*k31*k52*k45*k65 + k21*k31*k43*k63*k54 + k21*k31*k43*k63*k56 + k21*k31*k43*k54*k65 + k21*k31*k63*k56*k45 + k21*k41*k52*k34*k63 + k21*k41*k52*k34*k65 + k21*k41*k52*k65*k36 + k21*k41*k34*k54*k63 + k21*k41*k34*k63*k56 + k21*k41*k34*k54*k65 + k21*k41*k54*k65*k36 + k21*k42*k52*k34*k63 + k21*k42*k52*k34*k65 + k21*k42*k52*k65*k36 + k21*k42*k34*k54*k63 + k21*k42*k34*k63*k56 + k21*k42*k34*k54*k65 + k21*k42*k54*k65*k36 + k21*k52*k45*k34*k63 + k21*k52*k65*k36*k43 + k21*k52*k45*k65*k34 + k21*k52*k45*k65*k36 + k31*k41*k24*k52*k63 + k31*k41*k24*k52*k65 + k31*k41*k24*k54*k63 + k31*k41*k24*k63*k56 + k31*k41*k24*k54*k65 + k31*k41*k63*k54*k25 + k31*k41*k63*k56*k25 + k31*k41*k54*k25*k65 + k31*k43*k63*k24*k52 + k31*k43*k24*k52*k65 + k31*k63*k56*k25*k42 + k31*k43*k63*k24*k54 + k31*k43*k63*k24*k56 + k31*k43*k24*k54*k65 + k31*k63*k56*k45*k24 + k31*k43*k63*k54*k25 + k31*k43*k63*k56*k25 + k31*k43*k54*k25*k65 + k31*k63*k56*k25*k45 + k41*k24*k34*k52*k63 + k41*k24*k34*k52*k65 + k41*k24*k52*k65*k36 + k41*k24*k54*k34*k63 + k41*k24*k34*k63*k56 + k41*k24*k54*k34*k65 + k41*k24*k54*k65*k36 + k41*k34*k54*k25*k45*k63 + k41*k34*k63*k56*k25 + k41*k34*k54*k25*k65 + k41*k54*k25*k65*k36;
E(2) = k12*k52*k31*k41*k63 + k12*k52*k31*k41*k65 + k12*k31*k41*k63*k54 + k12*k31*k41*k63*k56 + k12*k31*k41*k54*k65 + k12*k42*k52*k31*k63 + k12*k42*k52*k31*k65 + k12*k42*k31*k63*k54 + k12*k42*k31*k63*k56 + k12*k42*k31*k54*k65 + k12*k52*k31*k43*k63 + k12*k52*k31*k43*k65 + k12*k52*k31*k63*k45 + k12*k52*k31*k45*k65 + k12*k31*k43*k63*k54 + k12*k31*k43*k63*k56 + k12*k31*k43*k54*k65 + k12*k31*k63*k56*k45 + k12*k52*k41*k34*k63 + k12*k52*k41*k34*k65 + k12*k52*k41*k65*k36 + k12*k41*k34*k54*k63 + k12*k41*k34*k63*k56 + k12*k41*k34*k54*k65 + k12*k41*k54*k65*k36 + k12*k42*k52*k34*k63 + k12*k42*k52*k34*k65 + k12*k42*k52*k65*k36 + k12*k42*k34*k54*k63 + k12*k42*k34*k63*k56 + k12*k42*k34*k54*k65 + k12*k42*k54*k65*k36 + k12*k52*k45*k34*k63 + k12*k52*k65*k36*k43 + k12*k52*k45*k65*k34 + k12*k52*k45*k65*k36 + k42*k52*k14*k31*k63 + k42*k52*k14*k31*k65 + k42*k14*k54*k31*k63 + k42*k14*k31*k63*k56 + k42*k14*k54*k31*k65 + k52*k45*k14*k31*k63 + k52*k65*k36*k13*k41 + k52*k45*k65*k14*k31 + k42*k52*k34*k13*k63 + k42*k52*k34*k13*k65 + k42*k52*k65*k36*k13 + k42*k34*k54*k13*k63 + k42*k34*k13*k63*k56 + k42*k34*k54*k13*k65 + k42*k54*k65*k36*k13 + k52*k45*k34*k13*k63 + k52*k65*k36*k13*k43 + k52*k45*k65*k34*k13 + k52*k45*k65*k36*k13 + k42*k52*k14*k34*k63 + k42*k52*k14*k34*k65 + k42*k52*k14*k65*k36 + k42*k14*k54*k34*k63 + k42*k14*k34*k63*k56 + k42*k14*k54*k34*k65 + k42*k14*k54*k65*k36 + k52*k45*k14*k34*k63 + k52*k65*k36*k43*k14 + k52*k45*k65*k14*k34 + k52*k45*k65*k14*k36;
E(3) = k13*k63*k21*k41*k52 + k13*k21*k41*k52*k65 + k13*k63*k21*k41*k54 + k13*k63*k21*k41*k56 + k13*k21*k41*k54*k65 + k13*k63*k21*k42*k52 + k13*k21*k42*k52*k65 + k13*k63*k21*k42*k54 + k13*k63*k21*k42*k56 + k13*k21*k42*k54*k65 + k13*k43*k63*k21*k52 + k13*k43*k21*k52*k65 + k13*k63*k21*k52*k45 + k13*k21*k52*k45*k65 + k13*k43*k63*k21*k54 + k13*k43*k63*k21*k56 + k13*k43*k21*k54*k65 + k13*k63*k21*k56*k45 + k43*k63*k14*k21*k52 + k43*k14*k21*k52*k65 + k63*k56*k25*k12*k41 + k43*k63*k14*k54*k21 + k43*k63*k14*k21*k56 + k43*k14*k54*k21*k65 + k63*k56*k45*k14*k21 + k43*k63*k24*k12*k52 + k43*k24*k12*k52*k65 + k63*k56*k25*k12*k42 + k43*k63*k24*k54*k12 + k43*k63*k24*k12*k56 + k43*k24*k54*k12*k65 + k63*k56*k45*k24*k12 + k43*k63*k54*k25*k12 + k43*k63*k56*k25*k12 + k43*k54*k25*k65*k12 + k63*k56*k25*k12*k45 + k13*k63*k41*k24*k52 + k13*k41*k24*k52*k65 + k13*k63*k41*k24*k54 + k13*k63*k41*k24*k56 + k13*k41*k24*k54*k65 + k13*k63*k41*k54*k25 + k13*k63*k41*k56*k25 + k13*k41*k54*k25*k65 + k13*k43*k63*k24*k52 + k13*k43*k24*k52*k65 + k13*k63*k56*k25*k42 + k13*k43*k63*k24*k54 + k13*k43*k63*k24*k56 + k13*k43*k24*k54*k65 + k13*k63*k56*k45*k24 + k13*k43*k63*k54*k25 + k13*k43*k63*k56*k25 + k13*k43*k54*k25*k65 + k13*k63*k56*k25*k45 + k43*k63*k14*k24*k52 + k43*k14*k24*k52*k65 + k63*k56*k25*k42*k14 + k43*k63*k14*k54*k24 + k43*k63*k14*k24*k56 + k43*k14*k54*k24*k65 + k63*k56*k45*k14*k24 + k43*k63*k14*k54*k25 + k43*k63*k14*k56*k25 + k43*k14*k54*k25*k65 + k63*k56*k25*k45*k14;
E(4) = k14*k21*k31*k52*k63 + k14*k21*k31*k52*k65 + k14*k54*k21*k31*k63 + k14*k21*k31*k63*k56 + k14*k54*k21*k31*k65 + k24*k12*k52*k31*k63 + k24*k12*k52*k31*k65 + k24*k54*k12*k31*k63 + k24*k12*k31*k63*k56 + k24*k54*k12*k31*k65 + k34*k13*k63*k21*k52 + k34*k13*k21*k52*k65 + k54*k25*k12*k31*k63 + k54*k25*k65*k12*k31 + k34*k54*k13*k63*k21 + k34*k13*k63*k21*k56 + k34*k54*k13*k21*k65 + k54*k65*k36*k13*k21 + k14*k34*k21*k52*k63 + k14*k34*k21*k52*k65 + k14*k21*k52*k65*k36 + k14*k34*k54*k21*k63 + k14*k34*k21*k63*k56 + k14*k34*k54*k21*k65 + k14*k54*k21*k65*k36 + k24*k34*k12*k52*k63 + k24*k34*k12*k52*k65 + k24*k12*k52*k65*k36 + k24*k34*k54*k12*k63 + k24*k34*k12*k63*k56 + k24*k34*k54*k12*k65 + k24*k54*k12*k65*k36 + k34*k54*k25*k12*k63 + k34*k63*k56*k25*k12 + k34*k54*k25*k65*k12 + k54*k25*k65*k12*k36 + k14*k24*k31*k52*k63 + k14*k24*k31*k52*k65 + k14*k24*k54*k31*k63 + k14*k24*k31*k63*k56 + k14*k24*k54*k31*k65 + k14*k54*k31*k25*k63 + k14*k31*k63*k56*k25 + k14*k54*k31*k25*k65 + k24*k34*k13*k63*k52 + k24*k34*k13*k52*k65 + k24*k52*k65*k36*k13 + k24*k34*k54*k13*k63 + k24*k34*k13*k63*k56 + k24*k34*k54*k13*k65 + k24*k54*k65*k36*k13 + k34*k54*k13*k63*k25 + k34*k13*k63*k56*k25 + k34*k54*k13*k25*k65 + k54*k25*k65*k36*k13 + k14*k24*k34*k52*k63 + k14*k24*k34*k52*k65 + k14*k24*k52*k65*k36 + k14*k24*k34*k54*k63 + k14*k24*k34*k63*k56 + k14*k24*k34*k54*k65 + k14*k24*k54*k65*k36 + k14*k34*k54*k25*k63 + k14*k34*k63*k56*k25 + k14*k34*k54*k25*k65 + k14*k54*k25*k65*k36;
E(5) = k25*k12*k31*k41*k63 + k25*k65*k12*k31*k41 + k45*k14*k21*k31*k63 + k65*k36*k13*k21*k41 + k45*k65*k14*k21*k31 + k25*k12*k42*k31*k63 + k25*k65*k12*k42*k31 + k45*k24*k12*k31*k63 + k65*k36*k13*k21*k42 + k45*k65*k24*k12*k31 + k25*k12*k31*k43*k63 + k25*k65*k12*k31*k43 + k25*k45*k12*k31*k63 + k25*k45*k65*k12*k31 + k45*k34*k13*k63*k21 + k65*k36*k13*k43*k21 + k45*k65*k34*k13*k21 + k45*k65*k36*k13*k21 + k25*k12*k41*k34*k63 + k25*k65*k12*k41*k34 + k25*k65*k12*k41*k36 + k45*k14*k21*k34*k63 + k65*k36*k43*k14*k21 + k45*k65*k14*k21*k34 + k45*k65*k14*k21*k36 + k25*k12*k42*k34*k63 + k25*k65*k12*k42*k34 + k25*k65*k12*k42*k36 + k45*k24*k12*k34*k63 + k65*k36*k43*k24*k12 + k45*k65*k24*k12*k34 + k45*k65*k24*k12*k36 + k25*k45*k12*k34*k63 + k25*k65*k12*k36*k43 + k25*k45*k65*k12*k34 + k25*k45*k65*k12*k36 + k25*k42*k14*k31*k63 + k25*k65*k42*k14*k31 + k45*k14*k31*k24*k63 + k65*k36*k13*k41*k24 + k45*k65*k14*k31*k24 + k25*k45*k14*k31*k63 + k25*k65*k36*k13*k41 + k25*k45*k65*k14*k31 + k25*k42*k34*k13*k63 + k25*k65*k42*k34*k13 + k25*k65*k42*k36*k13 + k45*k24*k34*k13*k63 + k65*k36*k13*k43*k24 + k45*k65*k24*k34*k13 + k45*k65*k24*k36*k13 + k25*k45*k34*k13*k63 + k25*k65*k36*k13*k43 + k25*k45*k65*k34*k13 + k25*k45*k65*k36*k13 + k25*k42*k14*k34*k63 + k25*k65*k42*k14*k34 + k25*k65*k42*k14*k36 + k45*k14*k34*k24*k63 + k65*k36*k43*k14*k24 + k45*k65*k14*k34*k24 + k45*k65*k14*k24*k36 + k25*k45*k14*k34*k63 + k25*k65*k36*k43*k14 + k25*k45*k65*k14*k34 + k25*k45*k65*k14*k36;
E(6) = k36*k13*k21*k41*k52 + k56*k25*k12*k31*k41 + k36*k13*k21*k41*k54 + k36*k56*k13*k21*k41 + k56*k45*k14*k21*k31 + k36*k13*k21*k42*k52 + k56*k25*k12*k42*k31 + k36*k13*k21*k42*k54 + k36*k56*k13*k21*k42 + k56*k45*k24*k12*k31 + k36*k13*k43*k21*k52 + k56*k25*k12*k31*k43 + k36*k13*k21*k52*k45 + k56*k25*k12*k31*k45 + k36*k13*k43*k21*k54 + k36*k56*k13*k43*k21 + k56*k45*k34*k13*k21 + k36*k56*k13*k21*k45 + k36*k43*k14*k21*k52 + k56*k25*k12*k41*k34 + k36*k56*k25*k12*k41 + k36*k43*k14*k54*k21 + k36*k56*k43*k14*k21 + k56*k45*k14*k21*k34 + k36*k56*k45*k14*k21 + k36*k43*k24*k12*k52 + k56*k25*k12*k42*k34 + k36*k56*k25*k12*k42 + k36*k43*k24*k54*k12 + k36*k56*k43*k24*k12 + k56*k45*k24*k12*k34 + k36*k56*k45*k24*k12 + k36*k43*k54*k25*k12 + k36*k56*k25*k12*k43 + k56*k25*k45*k12*k34 + k36*k56*k25*k12*k45 + k36*k13*k41*k24*k52 + k56*k25*k42*k14*k31 + k36*k13*k41*k24*k54 + k36*k56*k13*k41*k24 + k56*k45*k14*k31*k24 + k36*k13*k41*k54*k25 + k36*k56*k13*k41*k25 + k56*k25*k45*k14*k31 + k36*k13*k43*k24*k34*k52 + k56*k25*k42*k34*k13 + k36*k56*k13*k25*k42 + k36*k13*k43*k24*k54 + k36*k56*k13*k43*k24 + k56*k45*k24*k34*k13 + k36*k56*k13*k45*k24 + k36*k13*k43*k54*k25 + k36*k56*k13*k43*k25 + k56*k25*k45*k34*k13 + k36*k56*k13*k25*k45 + k36*k43*k14*k24*k52 + k56*k25*k42*k14*k34 + k36*k56*k25*k42*k14 + k36*k43*k14*k54*k24 + k36*k56*k43*k14*k24 + k56*k45*k14*k34*k24 + k36*k56*k45*k14*k24 + k36*k43*k14*k54*k25 + k36*k56*k25*k43*k14 + k56*k25*k45*k14*k54*k34 + k36*k56*k25*k45*k14;

%% denominator
 D = E(1) + E(2) + E(3) + E(4) + E(5) + E(6);

%% fractions 
 F(1) = E(1)/D; 
F(2) = E(2)/D; 
F(3) = E(3)/D; 
F(4) = E(4)/D; 
F(5) = E(5)/D; 
F(6) = E(6)/D; 